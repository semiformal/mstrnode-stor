# serverless.yml
service: pricehistory

provider:
  name: aws
  runtime: nodejs6.10
  memorySize: 128 # optional, in MB, default is 1024
  timeout: 30 # optional, in seconds, default is 6
  environment:
    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}
    REGION : ${opt:region, self:provider.region}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

## This is only for reference, not a good idea to deploy durable databases using serverless
# resources:
#   Resources:
#     PriceHistoryTable:
#       Type: 'AWS::DynamoDB::Table'
#       Properties:
#         AttributeDefinitions:
#           - AttributeName: coinPairKey
#             AttributeType: S      
#           - AttributeName: timeKey
#             AttributeType: S      
#         KeySchema:
#           - AttributeName: coinPairKey
#             KeyType: HASH
#           - AttributeName: timeKey
#             KeyType: RANGE
#         ProvisionedThroughput:
#           ReadCapacityUnits: 1
#           WriteCapacityUnits: 1
#         TableName: ${self:provider.environment.DYNAMODB_TABLE}

package:  
  include:
    - handler.query

functions:
  query:
    handler: handler.query
    events:
      - http:
          path: query
          method: get
          cors: true
      - http:
          path: query
          method: post
          cors: true

          
plugins:
  - serverless-plugin-typescript

